<?xml version="1.0" encoding="UTF-8"?>
<!--
 * SPDX-FileCopyrightText: (c) 2003-2025 The Apache Software Foundation (ASF) and contributors.
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc.
 * SPDX-License-Identifier: Apache-2.0
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>com.liferay.plutonium</groupId>
      <artifactId>plutonium-parent</artifactId>
      <version>4.0.0-SNAPSHOT</version>
      <relativePath>../pom.xml</relativePath>
   </parent>
   <artifactId>plutonium-testsuite</artifactId>
   <packaging>war</packaging>
   <name>Liferay Plutonium Testsuite Portlet</name>
   <dependencies>
      <dependency>
         <groupId>jakarta.portlet</groupId>
         <artifactId>jakarta.portlet-api</artifactId>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>com.liferay.plutonium</groupId>
         <artifactId>plutonium-taglib</artifactId>
         <version>${project.version}</version>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.tomcat</groupId>
         <artifactId>tomcat-servlet-api</artifactId>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>jakarta.servlet.jsp</groupId>
         <artifactId>jakarta.servlet.jsp-api</artifactId>
         <version>3.1.1</version>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>commons-digester</groupId>
         <artifactId>commons-digester</artifactId>
         <scope>${dependency.scope}</scope>
      </dependency>
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-api</artifactId>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-jdk14</artifactId>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>jcl-over-slf4j</artifactId>
         <scope>compile</scope>
      </dependency>
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
      </dependency>
   </dependencies>
   <!-- Build configuration -->
   <build>
      <resources>
         <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
         </resource>
      </resources>
      <plugins>
         <!-- configure maven-war-plugin to use updated web.xml -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
               <webXml>${project.build.directory}/plutonium-resources/web.xml</webXml>
            </configuration>
         </plugin>
         <!-- bind 'plutonium:assemble' goal to 'process-resources' lifecycle -->
         <plugin>
            <groupId>com.liferay.plutonium</groupId>
            <artifactId>plutonium-maven-plugin</artifactId>
            <version>${project.version}</version>
            <dependencies>
               <dependency>
                  <groupId>jakarta.xml.bind</groupId>
                  <artifactId>jakarta.xml.bind-api</artifactId>
                  <version>${jaxb.version}</version>
               </dependency>
               <dependency>
                  <groupId>com.sun.xml.bind</groupId>
                  <artifactId>jaxb-impl</artifactId>
                  <version>${jaxb-impl.version}</version>
               </dependency>
            </dependencies>
            <executions>
               <execution>
                  <phase>generate-resources</phase>
                  <goals>
                     <goal>assemble</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
         <!-- workaround for war processing of m-r-r-plugin causing the generated NOTICE and LICENSE file to be put under WEB-INF/classes/META-INF -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-remote-resources-plugin</artifactId>
            <executions>
               <execution>
                  <goals>
                     <goal>process</goal>
                  </goals>
                  <configuration>
                     <outputDirectory>${project.build.directory}/${project.build.finalName}</outputDirectory>
                     <attached>false</attached>
                     <resourceBundles>
                        <resourceBundle>org.apache:apache-jar-resource-bundle:1.0</resourceBundle>
                     </resourceBundles>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <!-- Don't attach source or javadoc archive -->
         <plugin>
            <artifactId>maven-source-plugin</artifactId>
            <configuration>
               <attach>false</attach>
            </configuration>
         </plugin>
         <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
               <skip>true</skip>
            </configuration>
         </plugin>
      </plugins>
   </build>
   <profiles>
      <profile>
         <id>deploy-testsuite</id>
         <activation>
            <activeByDefault>false</activeByDefault>
            <property>
               <name>deploy.dir</name>
            </property>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <executions>
                     <execution>
                        <phase>integration-test</phase>
                        <configuration>
                           <tasks>
                              <!--
                                      Use this to build and deploy the testsuite war.
                                      PORTLET_DEPLOY_DIR is an environmental variable 
                                      pointing to the hot-deploy directory of your portal.
                                      You can also use -Ddeploy.dir=<path to deployment dir>
                                      on the command line when invoking maven:
                                      mvn -Ddeploy.dir=/plutonium-1.1.4/webapps integration-test
                                    -->
                              <property environment="env" />
                              <property name="deploy.dir" value="${env.PORTLET_DEPLOY_DIR}" />
                              <copy file="target/${project.build.finalName}.war" tofile="${deploy.dir}/testsuite.war" />
                           </tasks>
                        </configuration>
                        <goals>
                           <goal>run</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <id>deploy-testsuite-by-env</id>
         <activation>
            <activeByDefault>false</activeByDefault>
            <property>
               <name>env.PORTLET_DEPLOY_DIR</name>
            </property>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <executions>
                     <execution>
                        <phase>integration-test</phase>
                        <configuration>
                           <tasks>
                              <!--
                                      Use this to build and deploy the testsuite war.
                                      PORTLET_DEPLOY_DIR is an environmental variable 
                                      pointing to the hot-deploy directory of your portal.
                                      You can also use -Ddeploy.dir=<path to deployment dir>
                                      on the command line when invoking maven:
                                      mvn -Ddeploy.dir=/plutonium-1.1.4/webapps integration-test
                                    -->
                              <property environment="env" />
                              <property name="deploy.dir" value="${env.PORTLET_DEPLOY_DIR}" />
                              <copy file="target/${project.build.finalName}.war" tofile="${deploy.dir}/testsuite.war" />
                           </tasks>
                        </configuration>
                        <goals>
                           <goal>run</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <id>rat</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.rat</groupId>
                  <artifactId>apache-rat-plugin</artifactId>
                  <configuration>
                     <excludes combine.children="append">
                        <exclude>src/main/webapp/META-INF/SLF4J-LICENSE</exclude>
                     </excludes>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>
